apiVersion: apps/v1
kind: TypoDeployment
metadata:
  name: prism-agent-server
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{ template "labels.common" . }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prism-agent-server
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prism-agent-server
        {{ template "labels.common" . }}
    spec:
      imagePullSecrets:
      - name: atala-prism-dev-deployments-github-docker-registry-key
      initContainers:
      - name: wait-postgress-ready
        image: busybox
        command: ['sh', '-c', "until nc -z {{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.{{.Release.Namespace}} 5432; do echo waiting for postgress-operator; sleep 2; done;"]
      {{- if .Values.server.keycloak.enabled }}
      - name: wait-keycloak-ready
        image: badouralix/curl-jq:ubuntu
        command: ['/bin/bash', '-c', 'until curl http://{{ .Release.Name }}-keycloak/health/ready; do sleep 2; done && echo "Keycloak is ready."']
      {{- if .Values.server.keycloak.bootstrap }}
      - name: keycloak-bootstrap
        image: badouralix/curl-jq:ubuntu
        command: ['/bin/bash', '-c', '/scripts/init.sh']
        env:
        - name: KEYCLOAK_BASE_URL
          value: http://{{ .Release.Name }}-keycloak
        - name: KEYCLOAK_ADMIN_USER
          value: {{ .Values.server.keycloak.admin.username }}
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            {{- toYaml .Values.server.keycloak.admin.password | nindent 12 }}
        - name: REALM_NAME
          value: {{ .Values.server.keycloak.realm }}
        - name: PRISM_AGENT_CLIENT_ID
          value: {{ .Values.server.keycloak.client.clientId }}
        - name: PRISM_AGENT_CLIENT_SECRET
          valueFrom:
            {{- toYaml .Values.server.keycloak.client.clientSecret | nindent 12 }}
        volumeMounts:
        - name: keycloak-bootstrap-script
          mountPath: /scripts
          readOnly: true
      {{- end }}
      {{- end }}
      containers:
      - name: prism-agent-server
        image: "{{ .Values.server.image.repository }}/{{ .Values.server.image.tag }}:{{ .Values.server.image.version | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.server.image.pullPolicy }}
        resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
        ports:
        - containerPort: 8085
        - containerPort: 8090
        env:
          - name: ADMIN_TOKEN
            valueFrom:
              secretKeyRef:
                name: agent-admin-token
                key: token
                optional: false
          - name: API_KEY_SALT
            valueFrom:
              secretKeyRef:
                name: agent-api-key-salt
                key: salt
                optional: false
          - name: POLLUX_DB_HOST
            value: "{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.{{.Release.Namespace}}"
          - name: POLLUX_DB_PORT
            value: "5432"
          - name: POLLUX_DB_NAME
            value: pollux
          - name: POLLUX_DB_USER
            valueFrom:
              secretKeyRef:
                name: pollux-admin.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: username
                optional: false
          - name: POLLUX_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: pollux-admin.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: password
                optional: false
          - name: POLLUX_DB_APP_USER
            valueFrom:
              secretKeyRef:
                name: pollux-application-user.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: username
                optional: false
          - name: POLLUX_DB_APP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: pollux-application-user.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: password
                optional: false
          - name: CONNECT_DB_HOST
            value: "{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.{{.Release.Namespace}}"
          - name: CONNECT_DB_PORT
            value: "5432"
          - name: CONNECT_DB_NAME
            value: connect
          - name: CONNECT_DB_USER
            valueFrom:
              secretKeyRef:
                name: connect-admin.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: username
                optional: false
          - name: CONNECT_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: connect-admin.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: password
                optional: false
          - name: CONNECT_DB_APP_USER
            valueFrom:
              secretKeyRef:
                name: connect-application-user.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: username
                optional: false
          - name: CONNECT_DB_APP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: connect-application-user.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: password
                optional: false
          - name: AGENT_DB_HOST
            value: "{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.{{.Release.Namespace}}"
          - name: AGENT_DB_PORT
            value: "5432"
          - name: AGENT_DB_NAME
            value: agent
          - name: AGENT_DB_USER
            valueFrom:
              secretKeyRef:
                name: agent-admin.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: username
                optional: false
          - name: AGENT_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: agent-admin.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: password
                optional: false
          - name: AGENT_DB_APP_USER
            valueFrom:
              secretKeyRef:
                name: agent-application-user.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: username
                optional: false
          - name: AGENT_DB_APP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: agent-application-user.{{ .Values.database.postgres.managingTeam }}-prism-agent-postgres-cluster.credentials.postgresql.acid.zalan.do
                key: password
                optional: false
          - name: DIDCOMM_SERVICE_URL
            value: "https://{{ index .Values.ingress.applicationUrls 0 }}/prism-agent/didcomm"
          - name: REST_SERVICE_URL
            value: "https://{{ index .Values.ingress.applicationUrls 0 }}/prism-agent"
          - name: PRISM_NODE_HOST
            value: {{ .Values.vdrManager.host | quote }}
          - name: PRISM_NODE_PORT
            value: {{ .Values.vdrManager.port | quote }}
          {{- if .Values.server.devMode }}
          - name: DEV_MODE
            value: "true"
          {{- else }}
          - name: DEFAULT_WALLET_SEED
            valueFrom:
              secretKeyRef:
                name: agent-wallet-seed
                key: seed
                optional: false
          {{- end }}
          - name: API_KEY_AUTHENTICATE_AS_DEFAULT_USER
            value: "true"
          {{- if .Values.server.useVault }}
          - name: VAULT_ADDR
            value: "http://{{ .Release.Namespace }}-vault.{{ .Release.Namespace }}:8200"
          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: vault-root-token
                key: root-token
                optional: false
          {{- end }}
          {{- if .Values.server.keycloak.enabled }}
          - name: KEYCLOAK_ENABLED
            value: "true"
          - name: KEYCLOAK_URL
            value: http://{{ .Release.Name }}-keycloak
          - name: KEYCLOAK_REALM
            value: {{ .Values.server.keycloak.realm }}
          - name: KEYCLOAK_CLIENT_ID
            value: {{ .Values.server.keycloak.client.clientId }}
          - name: KEYCLOAK_CLIENT_SECRET
            valueFrom:
              {{- toYaml .Values.server.keycloak.client.clientSecret | nindent 14 }}
          {{- end }}
          {{- range $key, $value := .Values.server.additionalEnvVariables }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
      {{- if .Values.server.keycloak.bootstrap }}
      volumes:
      - name: keycloak-bootstrap-script
        configMap:
          name: keycloak-bootstrap-script
          defaultMode: 0500
          items:
          - key: "init.sh"
            path: "init.sh"
      {{- end }}
